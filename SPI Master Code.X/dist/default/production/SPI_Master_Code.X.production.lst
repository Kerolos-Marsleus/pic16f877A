

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 07 08:58:50 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    10                           	dabs	1,0x7E,2
    11     0000                     
    12                           ; Generated 22/03/2023 GMT
    13                           ; 
    14                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution. Publication is not required when
    28                           ;        this file is used in an embedded application.
    29                           ; 
    30                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    31                           ;        software without specific prior written permission.
    32                           ; 
    33                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    34                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    35                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    36                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    37                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    38                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    39                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    40                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    41                           ; 
    42                           ; 
    43                           ; Code-generator required, PIC16F877A Definitions
    44                           ; 
    45                           ; SFR Addresses
    46     0000                     	;# 
    47     0001                     	;# 
    48     0002                     	;# 
    49     0003                     	;# 
    50     0004                     	;# 
    51     0005                     	;# 
    52     0006                     	;# 
    53     0007                     	;# 
    54     0008                     	;# 
    55     0009                     	;# 
    56     000A                     	;# 
    57     000B                     	;# 
    58     000C                     	;# 
    59     000D                     	;# 
    60     000E                     	;# 
    61     000E                     	;# 
    62     000F                     	;# 
    63     0010                     	;# 
    64     0011                     	;# 
    65     0012                     	;# 
    66     0013                     	;# 
    67     0014                     	;# 
    68     0015                     	;# 
    69     0015                     	;# 
    70     0016                     	;# 
    71     0017                     	;# 
    72     0018                     	;# 
    73     0019                     	;# 
    74     001A                     	;# 
    75     001B                     	;# 
    76     001B                     	;# 
    77     001C                     	;# 
    78     001D                     	;# 
    79     001E                     	;# 
    80     001F                     	;# 
    81     0081                     	;# 
    82     0085                     	;# 
    83     0086                     	;# 
    84     0087                     	;# 
    85     0088                     	;# 
    86     0089                     	;# 
    87     008C                     	;# 
    88     008D                     	;# 
    89     008E                     	;# 
    90     0091                     	;# 
    91     0092                     	;# 
    92     0093                     	;# 
    93     0094                     	;# 
    94     0098                     	;# 
    95     0099                     	;# 
    96     009C                     	;# 
    97     009D                     	;# 
    98     009E                     	;# 
    99     009F                     	;# 
   100     010C                     	;# 
   101     010D                     	;# 
   102     010E                     	;# 
   103     010F                     	;# 
   104     018C                     	;# 
   105     018D                     	;# 
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0008                     	;# 
   115     0009                     	;# 
   116     000A                     	;# 
   117     000B                     	;# 
   118     000C                     	;# 
   119     000D                     	;# 
   120     000E                     	;# 
   121     000E                     	;# 
   122     000F                     	;# 
   123     0010                     	;# 
   124     0011                     	;# 
   125     0012                     	;# 
   126     0013                     	;# 
   127     0014                     	;# 
   128     0015                     	;# 
   129     0015                     	;# 
   130     0016                     	;# 
   131     0017                     	;# 
   132     0018                     	;# 
   133     0019                     	;# 
   134     001A                     	;# 
   135     001B                     	;# 
   136     001B                     	;# 
   137     001C                     	;# 
   138     001D                     	;# 
   139     001E                     	;# 
   140     001F                     	;# 
   141     0081                     	;# 
   142     0085                     	;# 
   143     0086                     	;# 
   144     0087                     	;# 
   145     0088                     	;# 
   146     0089                     	;# 
   147     008C                     	;# 
   148     008D                     	;# 
   149     008E                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0094                     	;# 
   154     0098                     	;# 
   155     0099                     	;# 
   156     009C                     	;# 
   157     009D                     	;# 
   158     009E                     	;# 
   159     009F                     	;# 
   160     010C                     	;# 
   161     010D                     	;# 
   162     010E                     	;# 
   163     010F                     	;# 
   164     018C                     	;# 
   165     018D                     	;# 
   166     0013                     _SSPBUF	set	19
   167     0008                     _PORTD	set	8
   168     00A4                     _CKP	set	164
   169     00A5                     _SSPEN	set	165
   170     00A3                     _SSPM3	set	163
   171     00A2                     _SSPM2	set	162
   172     00A1                     _SSPM1	set	161
   173     00A0                     _SSPM0	set	160
   174     0032                     _RB2	set	50
   175     0031                     _RB1	set	49
   176     0030                     _RB0	set	48
   177     0094                     _SSPSTATbits	set	148
   178     0088                     _TRISD	set	136
   179     0086                     _TRISB	set	134
   180     043B                     _TRISC3	set	1083
   181     043C                     _TRISC4	set	1084
   182     043D                     _TRISC5	set	1085
   183     04A7                     _SMP	set	1191
   184     04A6                     _CKE	set	1190
   185                           
   186                           	psect	cinit
   187     07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190     07FC                     __initialization:
   191     07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194     07FC                     __end_of__initialization:
   195     07FC  0183               	clrf	3
   196     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199     0070                     __pcstackCOMMON:
   200     0070                     ?_SPI_Master_Init:
   201     0070                     ??_SPI_Master_Init:	
   202                           ; 1 bytes @ 0x0
   203                           
   204     0070                     ?_SPI_Write:	
   205                           ; 1 bytes @ 0x0
   206                           
   207     0070                     ??_SPI_Write:	
   208                           ; 1 bytes @ 0x0
   209                           
   210     0070                     ?_main:	
   211                           ; 1 bytes @ 0x0
   212                           
   213     0070                     SPI_Write@Data:	
   214                           ; 1 bytes @ 0x0
   215                           
   216                           
   217                           ; 1 bytes @ 0x0
   218     0070                     	ds	1
   219     0071                     ??_main:
   220                           
   221                           ; 1 bytes @ 0x1
   222     0071                     	ds	3
   223     0074                     main@Data:
   224                           
   225                           ; 1 bytes @ 0x4
   226     0074                     	ds	1
   227                           
   228                           	psect	maintext
   229     07A3                     __pmaintext:	
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 24 in file "mainMaster.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  Data            1    4[COMMON] unsigned char 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         1       0       0       0       0
   251 ;;      Temps:          3       0       0       0       0
   252 ;;      Totals:         4       0       0       0       0
   253 ;;Total ram usage:        4 bytes
   254 ;; Hardware stack levels required when called: 1
   255 ;; This function calls:
   256 ;;		_SPI_Master_Init
   257 ;;		_SPI_Write
   258 ;; This function is called by:
   259 ;;		Startup code after reset
   260 ;; This function uses a non-reentrant model
   261 ;;
   262                           
   263     07A3                     _main:	
   264                           ;psect for function _main
   265                           
   266     07A3                     l612:	
   267                           ;incstack = 0
   268                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   269                           
   270                           
   271                           ;mainMaster.c: 25:     SPI_Master_Init();
   272     07A3  120A  118A  2793  120A  118A  	fcall	_SPI_Master_Init
   273     07A8                     l614:
   274                           
   275                           ;mainMaster.c: 26:     uint8_t Data = 0;
   276     07A8  01F4               	clrf	main@Data
   277     07A9                     l616:
   278                           
   279                           ;mainMaster.c: 27:     TRISB = 0x07;
   280     07A9  3007               	movlw	7
   281     07AA  1683               	bsf	3,5	;RP0=1, select bank1
   282     07AB  1303               	bcf	3,6	;RP1=0, select bank1
   283     07AC  0086               	movwf	6	;volatile
   284     07AD                     l618:
   285                           
   286                           ;mainMaster.c: 28:     TRISD = 0x00;
   287     07AD  0188               	clrf	8	;volatile
   288     07AE                     l620:
   289                           
   290                           ;mainMaster.c: 29:     PORTD = 0x00;
   291     07AE  1283               	bcf	3,5	;RP0=0, select bank0
   292     07AF  1303               	bcf	3,6	;RP1=0, select bank0
   293     07B0  0188               	clrf	8	;volatile
   294     07B1                     l622:
   295                           
   296                           ;mainMaster.c: 32:         if(RB0){
   297     07B1  1C06               	btfss	6,0	;volatile
   298     07B2  2FB4               	goto	u21
   299     07B3  2FB5               	goto	u20
   300     07B4                     u21:
   301     07B4  2FC6               	goto	l628
   302     07B5                     u20:
   303     07B5                     l624:
   304                           
   305                           ;mainMaster.c: 33:             Data++;
   306     07B5  3001               	movlw	1
   307     07B6  00FF               	movwf	btemp+1
   308     07B7  087F               	movf	btemp+1,w
   309     07B8  07F4               	addwf	main@Data,f
   310     07B9                     l626:
   311                           
   312                           ;mainMaster.c: 34:             _delay((unsigned long)((250)*(4000000/4000.0)));
   313     07B9  3002               	movlw	2
   314     07BA  00F3               	movwf	??_main+2
   315     07BB  3045               	movlw	69
   316     07BC  00F2               	movwf	??_main+1
   317     07BD  30A9               	movlw	169
   318     07BE  00F1               	movwf	??_main
   319     07BF                     u57:
   320     07BF  0BF1               	decfsz	??_main,f
   321     07C0  2FBF               	goto	u57
   322     07C1  0BF2               	decfsz	??_main+1,f
   323     07C2  2FBF               	goto	u57
   324     07C3  0BF3               	decfsz	??_main+2,f
   325     07C4  2FBF               	goto	u57
   326     07C5  2FC6               	nop2
   327     07C6                     l628:
   328                           
   329                           ;mainMaster.c: 37:          if(RB1){
   330     07C6  1283               	bcf	3,5	;RP0=0, select bank0
   331     07C7  1303               	bcf	3,6	;RP1=0, select bank0
   332     07C8  1C86               	btfss	6,1	;volatile
   333     07C9  2FCB               	goto	u31
   334     07CA  2FCC               	goto	u30
   335     07CB                     u31:
   336     07CB  2FDB               	goto	l634
   337     07CC                     u30:
   338     07CC                     l630:
   339                           
   340                           ;mainMaster.c: 38:             Data--;
   341     07CC  3001               	movlw	1
   342     07CD  02F4               	subwf	main@Data,f
   343     07CE                     l632:
   344                           
   345                           ;mainMaster.c: 39:             _delay((unsigned long)((250)*(4000000/4000.0)));
   346     07CE  3002               	movlw	2
   347     07CF  00F3               	movwf	??_main+2
   348     07D0  3045               	movlw	69
   349     07D1  00F2               	movwf	??_main+1
   350     07D2  30A9               	movlw	169
   351     07D3  00F1               	movwf	??_main
   352     07D4                     u67:
   353     07D4  0BF1               	decfsz	??_main,f
   354     07D5  2FD4               	goto	u67
   355     07D6  0BF2               	decfsz	??_main+1,f
   356     07D7  2FD4               	goto	u67
   357     07D8  0BF3               	decfsz	??_main+2,f
   358     07D9  2FD4               	goto	u67
   359     07DA  2FDB               	nop2
   360     07DB                     l634:
   361                           
   362                           ;mainMaster.c: 42:         if(RB2){
   363     07DB  1283               	bcf	3,5	;RP0=0, select bank0
   364     07DC  1303               	bcf	3,6	;RP1=0, select bank0
   365     07DD  1D06               	btfss	6,2	;volatile
   366     07DE  2FE0               	goto	u41
   367     07DF  2FE1               	goto	u40
   368     07E0                     u41:
   369     07E0  2FF4               	goto	l640
   370     07E1                     u40:
   371     07E1                     l636:
   372                           
   373                           ;mainMaster.c: 43:             SPI_Write(Data);
   374     07E1  0874               	movf	main@Data,w
   375     07E2  120A  118A  2787  120A  118A  	fcall	_SPI_Write
   376     07E7                     l638:
   377                           
   378                           ;mainMaster.c: 44:             _delay((unsigned long)((250)*(4000000/4000.0)));
   379     07E7  3002               	movlw	2
   380     07E8  00F3               	movwf	??_main+2
   381     07E9  3045               	movlw	69
   382     07EA  00F2               	movwf	??_main+1
   383     07EB  30A9               	movlw	169
   384     07EC  00F1               	movwf	??_main
   385     07ED                     u77:
   386     07ED  0BF1               	decfsz	??_main,f
   387     07EE  2FED               	goto	u77
   388     07EF  0BF2               	decfsz	??_main+1,f
   389     07F0  2FED               	goto	u77
   390     07F1  0BF3               	decfsz	??_main+2,f
   391     07F2  2FED               	goto	u77
   392     07F3  2FF4               	nop2
   393     07F4                     l640:
   394                           
   395                           ;mainMaster.c: 47:         PORTD = Data;
   396     07F4  0874               	movf	main@Data,w
   397     07F5  1283               	bcf	3,5	;RP0=0, select bank0
   398     07F6  1303               	bcf	3,6	;RP1=0, select bank0
   399     07F7  0088               	movwf	8	;volatile
   400     07F8  2FB1               	goto	l622
   401     07F9  120A  118A  2800   	ljmp	start
   402     07FC                     __end_of_main:
   403                           
   404                           	psect	text1
   405     0787                     __ptext1:	
   406 ;; *************** function _SPI_Write *****************
   407 ;; Defined at:
   408 ;;		line 80 in file "mainMaster.c"
   409 ;; Parameters:    Size  Location     Type
   410 ;;  Data            1    wreg     unsigned char 
   411 ;; Auto vars:     Size  Location     Type
   412 ;;  Data            1    0[COMMON] unsigned char 
   413 ;; Return value:  Size  Location     Type
   414 ;;                  1    wreg      void 
   415 ;; Registers used:
   416 ;;		wreg
   417 ;; Tracked objects:
   418 ;;		On entry : 0/0
   419 ;;		On exit  : 0/0
   420 ;;		Unchanged: 0/0
   421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   422 ;;      Params:         0       0       0       0       0
   423 ;;      Locals:         1       0       0       0       0
   424 ;;      Temps:          0       0       0       0       0
   425 ;;      Totals:         1       0       0       0       0
   426 ;;Total ram usage:        1 bytes
   427 ;; Hardware stack levels used: 1
   428 ;; This function calls:
   429 ;;		Nothing
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435     0787                     _SPI_Write:	
   436                           ;psect for function _SPI_Write
   437                           
   438                           
   439                           ;incstack = 0
   440                           ; Regs used in _SPI_Write: [wreg]
   441                           ;SPI_Write@Data stored from wreg
   442     0787  00F0               	movwf	SPI_Write@Data
   443     0788                     l610:
   444                           
   445                           ;mainMaster.c: 81:     SSPBUF = Data;
   446     0788  0870               	movf	SPI_Write@Data,w
   447     0789  1283               	bcf	3,5	;RP0=0, select bank0
   448     078A  1303               	bcf	3,6	;RP1=0, select bank0
   449     078B  0093               	movwf	19	;volatile
   450     078C                     l61:	
   451                           ;mainMaster.c: 82:      while(!SSPSTATbits.BF);
   452                           
   453     078C  1683               	bsf	3,5	;RP0=1, select bank1
   454     078D  1303               	bcf	3,6	;RP1=0, select bank1
   455     078E  1C14               	btfss	20,0	;volatile
   456     078F  2F91               	goto	u11
   457     0790  2F92               	goto	u10
   458     0791                     u11:
   459     0791  2F8C               	goto	l61
   460     0792                     u10:
   461     0792                     l64:
   462     0792  0008               	return
   463     0793                     __end_of_SPI_Write:
   464                           
   465                           	psect	text2
   466     0793                     __ptext2:	
   467 ;; *************** function _SPI_Master_Init *****************
   468 ;; Defined at:
   469 ;;		line 55 in file "mainMaster.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496     0793                     _SPI_Master_Init:	
   497                           ;psect for function _SPI_Master_Init
   498                           
   499     0793                     l608:	
   500                           ;incstack = 0
   501                           ; Regs used in _SPI_Master_Init: []
   502                           
   503                           
   504                           ;mainMaster.c: 57:     SSPM0 = 0;
   505     0793  1283               	bcf	3,5	;RP0=0, select bank0
   506     0794  1303               	bcf	3,6	;RP1=0, select bank0
   507     0795  1014               	bcf	20,0	;volatile
   508                           
   509                           ;mainMaster.c: 58:     SSPM1 = 0;
   510     0796  1094               	bcf	20,1	;volatile
   511                           
   512                           ;mainMaster.c: 59:     SSPM2 = 0;
   513     0797  1114               	bcf	20,2	;volatile
   514                           
   515                           ;mainMaster.c: 60:     SSPM3 = 0;
   516     0798  1194               	bcf	20,3	;volatile
   517                           
   518                           ;mainMaster.c: 63:     SSPEN = 1;
   519     0799  1694               	bsf	20,5	;volatile
   520                           
   521                           ;mainMaster.c: 66:     CKP = 0;
   522     079A  1214               	bcf	20,4	;volatile
   523                           
   524                           ;mainMaster.c: 67:     CKE = 0;
   525     079B  1683               	bsf	3,5	;RP0=1, select bank1
   526     079C  1303               	bcf	3,6	;RP1=0, select bank1
   527     079D  1314               	bcf	20,6	;volatile
   528                           
   529                           ;mainMaster.c: 70:     SMP = 0;
   530     079E  1394               	bcf	20,7	;volatile
   531                           
   532                           ;mainMaster.c: 73:     TRISC5 = 0;
   533     079F  1287               	bcf	7,5	;volatile
   534                           
   535                           ;mainMaster.c: 74:     TRISC4 = 1;
   536     07A0  1607               	bsf	7,4	;volatile
   537                           
   538                           ;mainMaster.c: 75:     TRISC3 = 0;
   539     07A1  1187               	bcf	7,3	;volatile
   540     07A2                     l58:
   541     07A2  0008               	return
   542     07A3                     __end_of_SPI_Master_Init:
   543     007E                     btemp	set	126	;btemp
   544     007E                     wtemp0	set	126
   545                           
   546                           	psect	config
   547                           
   548                           ;Config register CONFIG @ 0x2007
   549                           ;	Oscillator Selection bits
   550                           ;	FOSC = XT, XT oscillator
   551                           ;	Watchdog Timer Enable bit
   552                           ;	WDTE = OFF, WDT disabled
   553                           ;	Power-up Timer Enable bit
   554                           ;	PWRTE = ON, PWRT enabled
   555                           ;	Brown-out Reset Enable bit
   556                           ;	BOREN = ON, BOR enabled
   557                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   558                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   559                           ;	Data EEPROM Memory Code Protection bit
   560                           ;	CPD = OFF, Data EEPROM code protection off
   561                           ;	Flash Program Memory Write Enable bits
   562                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   563                           ;	In-Circuit Debugger Mode bit
   564                           ;	DEBUG = 0x1, unprogrammed default
   565                           ;	Flash Program Memory Code Protection bit
   566                           ;	CP = OFF, Code protection off
   567     2007                     	org	8199
   568     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                    _SPI_Master_Init
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_Init
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 07 08:58:50 2024

        _SPI_Master_Init 0793              _SSPSTATbits 0094                       l61 078C  
                     l64 0792                       l58 07A2                       u10 0792  
                     u11 0791                       u20 07B5                       u21 07B4  
                     u30 07CC                       u31 07CB                       u40 07E1  
                     u41 07E0                       u57 07BF                       u67 07D4  
                     u77 07ED                      l610 0788                      l620 07AE  
                    l612 07A3                      l630 07CC                      l622 07B1  
                    l614 07A8                      l608 0793                      l640 07F4  
                    l632 07CE                      l624 07B5                      l616 07A9  
                    l634 07DB                      l626 07B9                      l618 07AD  
                    l636 07E1                      l628 07C6                      l638 07E7  
                    _CKE 04A6                      _CKP 00A4                      _RB0 0030  
                    _RB1 0031                      _RB2 0032                      _SMP 04A7  
                   _main 07A3                     btemp 007E                     start 0000  
                  ?_main 0070                    _PORTD 0008                    _SSPM0 00A0  
                  _SSPM1 00A1                    _SSPM2 00A2                    _SSPM3 00A3  
                  _TRISB 0086                    _TRISD 0088                    _SSPEN 00A5  
                  status 0003                    wtemp0 007E  __end_of_SPI_Master_Init 07A3  
        __initialization 07FC             __end_of_main 07FC                   ??_main 0071  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPBUF 0013        __end_of_SPI_Write 0793  __end_of__initialization 07FC  
       ?_SPI_Master_Init 0070           __pcstackCOMMON 0070               __pmaintext 07A3  
          SPI_Write@Data 0070                  __ptext1 0787                  __ptext2 0793  
   end_of_initialization 07FC                _SPI_Write 0787      start_initialization 07FC  
             ?_SPI_Write 0070                ___latbits 0002              ??_SPI_Write 0070  
      ??_SPI_Master_Init 0070                 main@Data 0074  
