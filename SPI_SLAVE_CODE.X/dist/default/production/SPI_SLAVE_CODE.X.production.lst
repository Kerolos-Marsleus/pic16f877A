

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Sat Dec 07 12:40:20 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14     0000                     
    15                           ; Generated 22/03/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0000                     	;# 
    50     0001                     	;# 
    51     0002                     	;# 
    52     0003                     	;# 
    53     0004                     	;# 
    54     0005                     	;# 
    55     0006                     	;# 
    56     0007                     	;# 
    57     0008                     	;# 
    58     0009                     	;# 
    59     000A                     	;# 
    60     000B                     	;# 
    61     000C                     	;# 
    62     000D                     	;# 
    63     000E                     	;# 
    64     000E                     	;# 
    65     000F                     	;# 
    66     0010                     	;# 
    67     0011                     	;# 
    68     0012                     	;# 
    69     0013                     	;# 
    70     0014                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001B                     	;# 
    79     001B                     	;# 
    80     001C                     	;# 
    81     001D                     	;# 
    82     001E                     	;# 
    83     001F                     	;# 
    84     0081                     	;# 
    85     0085                     	;# 
    86     0086                     	;# 
    87     0087                     	;# 
    88     0088                     	;# 
    89     0089                     	;# 
    90     008C                     	;# 
    91     008D                     	;# 
    92     008E                     	;# 
    93     0091                     	;# 
    94     0092                     	;# 
    95     0093                     	;# 
    96     0094                     	;# 
    97     0098                     	;# 
    98     0099                     	;# 
    99     009C                     	;# 
   100     009D                     	;# 
   101     009E                     	;# 
   102     009F                     	;# 
   103     010C                     	;# 
   104     010D                     	;# 
   105     010E                     	;# 
   106     010F                     	;# 
   107     018C                     	;# 
   108     018D                     	;# 
   109     0000                     	;# 
   110     0001                     	;# 
   111     0002                     	;# 
   112     0003                     	;# 
   113     0004                     	;# 
   114     0005                     	;# 
   115     0006                     	;# 
   116     0007                     	;# 
   117     0008                     	;# 
   118     0009                     	;# 
   119     000A                     	;# 
   120     000B                     	;# 
   121     000C                     	;# 
   122     000D                     	;# 
   123     000E                     	;# 
   124     000E                     	;# 
   125     000F                     	;# 
   126     0010                     	;# 
   127     0011                     	;# 
   128     0012                     	;# 
   129     0013                     	;# 
   130     0014                     	;# 
   131     0015                     	;# 
   132     0015                     	;# 
   133     0016                     	;# 
   134     0017                     	;# 
   135     0018                     	;# 
   136     0019                     	;# 
   137     001A                     	;# 
   138     001B                     	;# 
   139     001B                     	;# 
   140     001C                     	;# 
   141     001D                     	;# 
   142     001E                     	;# 
   143     001F                     	;# 
   144     0081                     	;# 
   145     0085                     	;# 
   146     0086                     	;# 
   147     0087                     	;# 
   148     0088                     	;# 
   149     0089                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0013                     _SSPBUF	set	19
   170     0006                     _PORTB	set	6
   171     0063                     _SSPIF	set	99
   172     00A6                     _SSPOV	set	166
   173     005F                     _GIE	set	95
   174     005E                     _PEIE	set	94
   175     00A4                     _CKP	set	164
   176     00A5                     _SSPEN	set	165
   177     00A3                     _SSPM3	set	163
   178     00A2                     _SSPM2	set	162
   179     00A1                     _SSPM1	set	161
   180     00A0                     _SSPM0	set	160
   181     0086                     _TRISB	set	134
   182     04A0                     _BF	set	1184
   183     0463                     _SSPIE	set	1123
   184     042D                     _TRISA5	set	1069
   185     04F8                     _PCFG0	set	1272
   186     04F9                     _PCFG1	set	1273
   187     04FA                     _PCFG2	set	1274
   188     04FB                     _PCFG3	set	1275
   189     043B                     _TRISC3	set	1083
   190     043C                     _TRISC4	set	1084
   191     043D                     _TRISC5	set	1085
   192     04A7                     _SMP	set	1191
   193     04A6                     _CKE	set	1190
   194                           
   195                           	psect	cinit
   196     000F                     start_initialization:	
   197                           ; #config settings
   198                           
   199     000F                     __initialization:
   200                           
   201                           ; Clear objects allocated to COMMON
   202     000F  01F2               	clrf	__pbssCOMMON& (0+127)
   203     0010                     end_of_initialization:	
   204                           ;End of C runtime variable initialization code
   205                           
   206     0010                     __end_of__initialization:
   207     0010  0183               	clrf	3
   208     0011  120A  118A  282C   	ljmp	_main	;jump to C main() function
   209                           
   210                           	psect	bssCOMMON
   211     0072                     __pbssCOMMON:
   212     0072                     _Data:
   213     0072                     	ds	1
   214                           
   215                           	psect	cstackCOMMON
   216     0070                     __pcstackCOMMON:
   217     0070                     ?_SPI_Slave_Init:
   218     0070                     ?_SPI_Read:	
   219                           ; 1 bytes @ 0x0
   220                           
   221     0070                     ?_main:	
   222                           ; 1 bytes @ 0x0
   223                           
   224     0070                     ?_ISR:	
   225                           ; 1 bytes @ 0x0
   226                           
   227     0070                     ??_ISR:	
   228                           ; 1 bytes @ 0x0
   229                           
   230                           
   231                           ; 1 bytes @ 0x0
   232     0070                     	ds	2
   233     0072                     ??_SPI_Slave_Init:
   234     0072                     ??_SPI_Read:	
   235                           ; 1 bytes @ 0x2
   236                           
   237     0072                     ??_main:	
   238                           ; 1 bytes @ 0x2
   239                           
   240                           
   241                           	psect	maintext
   242     002C                     __pmaintext:	
   243                           ; 1 bytes @ 0x2
   244 ;;
   245 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   246 ;;
   247 ;; *************** function _main *****************
   248 ;; Defined at:
   249 ;;		line 19 in file "mainSlave.c"
   250 ;; Parameters:    Size  Location     Type
   251 ;;		None
   252 ;; Auto vars:     Size  Location     Type
   253 ;;		None
   254 ;; Return value:  Size  Location     Type
   255 ;;                  1    wreg      void 
   256 ;; Registers used:
   257 ;;		wreg, status,2, status,0, pclath, cstack
   258 ;; Tracked objects:
   259 ;;		On entry : B00/0
   260 ;;		On exit  : 0/0
   261 ;;		Unchanged: 0/0
   262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   263 ;;      Params:         0       0       0       0       0
   264 ;;      Locals:         0       0       0       0       0
   265 ;;      Temps:          0       0       0       0       0
   266 ;;      Totals:         0       0       0       0       0
   267 ;;Total ram usage:        0 bytes
   268 ;; Hardware stack levels required when called: 2
   269 ;; This function calls:
   270 ;;		_SPI_Read
   271 ;;		_SPI_Slave_Init
   272 ;; This function is called by:
   273 ;;		Startup code after reset
   274 ;; This function uses a non-reentrant model
   275 ;;
   276                           
   277     002C                     _main:	
   278                           ;psect for function _main
   279                           
   280     002C                     l641:	
   281                           ;incstack = 0
   282                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   283                           
   284                           
   285                           ;mainSlave.c: 20:     SPI_Slave_Init();
   286     002C  120A  118A  2014  120A  118A  	fcall	_SPI_Slave_Init
   287     0031                     l643:
   288                           
   289                           ;mainSlave.c: 21:     TRISB = 0;
   290     0031  1683               	bsf	3,5	;RP0=1, select bank1
   291     0032  1303               	bcf	3,6	;RP1=0, select bank1
   292     0033  0186               	clrf	6	;volatile
   293     0034                     l645:
   294                           
   295                           ;mainSlave.c: 23:         PORTB = SPI_Read();
   296     0034  120A  118A  2040  120A  118A  	fcall	_SPI_Read
   297     0039  1283               	bcf	3,5	;RP0=0, select bank0
   298     003A  1303               	bcf	3,6	;RP1=0, select bank0
   299     003B  0086               	movwf	6	;volatile
   300     003C  2834               	goto	l645
   301     003D  120A  118A  280C   	ljmp	start
   302     0040                     __end_of_main:
   303                           
   304                           	psect	text1
   305     0014                     __ptext1:	
   306 ;; *************** function _SPI_Slave_Init *****************
   307 ;; Defined at:
   308 ;;		line 29 in file "mainSlave.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;		None
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		None
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0
   325 ;;      Totals:         0       0       0       0       0
   326 ;;Total ram usage:        0 bytes
   327 ;; Hardware stack levels used: 1
   328 ;; Hardware stack levels required when called: 1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_main
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336     0014                     _SPI_Slave_Init:	
   337                           ;psect for function _SPI_Slave_Init
   338                           
   339     0014                     l629:	
   340                           ;incstack = 0
   341                           ; Regs used in _SPI_Slave_Init: []
   342                           
   343                           
   344                           ;mainSlave.c: 31:     SSPM0 = 0;
   345     0014  1283               	bcf	3,5	;RP0=0, select bank0
   346     0015  1303               	bcf	3,6	;RP1=0, select bank0
   347     0016  1014               	bcf	20,0	;volatile
   348                           
   349                           ;mainSlave.c: 32:     SSPM1 = 0;
   350     0017  1094               	bcf	20,1	;volatile
   351                           
   352                           ;mainSlave.c: 33:     SSPM2 = 1;
   353     0018  1514               	bsf	20,2	;volatile
   354                           
   355                           ;mainSlave.c: 34:     SSPM3 = 0;
   356     0019  1194               	bcf	20,3	;volatile
   357                           
   358                           ;mainSlave.c: 37:     SSPEN = 1;
   359     001A  1694               	bsf	20,5	;volatile
   360                           
   361                           ;mainSlave.c: 40:     CKP = 0;
   362     001B  1214               	bcf	20,4	;volatile
   363                           
   364                           ;mainSlave.c: 41:     CKE = 0;
   365     001C  1683               	bsf	3,5	;RP0=1, select bank1
   366     001D  1303               	bcf	3,6	;RP1=0, select bank1
   367     001E  1314               	bcf	20,6	;volatile
   368                           
   369                           ;mainSlave.c: 44:     SMP = 0;
   370     001F  1394               	bcf	20,7	;volatile
   371                           
   372                           ;mainSlave.c: 47:     TRISC5 = 0;
   373     0020  1287               	bcf	7,5	;volatile
   374                           
   375                           ;mainSlave.c: 48:     TRISC4 = 1;
   376     0021  1607               	bsf	7,4	;volatile
   377                           
   378                           ;mainSlave.c: 49:     TRISC3 = 1;
   379     0022  1587               	bsf	7,3	;volatile
   380                           
   381                           ;mainSlave.c: 52:     PCFG3 = 0;
   382     0023  119F               	bcf	31,3	;volatile
   383                           
   384                           ;mainSlave.c: 53:     PCFG2 = 1;
   385     0024  151F               	bsf	31,2	;volatile
   386                           
   387                           ;mainSlave.c: 54:     PCFG1 = 0;
   388     0025  109F               	bcf	31,1	;volatile
   389                           
   390                           ;mainSlave.c: 55:     PCFG0 = 0;
   391     0026  101F               	bcf	31,0	;volatile
   392                           
   393                           ;mainSlave.c: 56:     TRISA5 = 1;
   394     0027  1685               	bsf	5,5	;volatile
   395                           
   396                           ;mainSlave.c: 59:     SSPIE = 1;
   397     0028  158C               	bsf	12,3	;volatile
   398                           
   399                           ;mainSlave.c: 60:     PEIE = 1;
   400     0029  170B               	bsf	11,6	;volatile
   401                           
   402                           ;mainSlave.c: 61:     GIE = 1;
   403     002A  178B               	bsf	11,7	;volatile
   404     002B                     l69:
   405     002B  0008               	return
   406     002C                     __end_of_SPI_Slave_Init:
   407                           
   408                           	psect	text2
   409     0040                     __ptext2:	
   410 ;; *************** function _SPI_Read *****************
   411 ;; Defined at:
   412 ;;		line 65 in file "mainSlave.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  1    wreg      unsigned char 
   419 ;; Registers used:
   420 ;;		wreg
   421 ;; Tracked objects:
   422 ;;		On entry : 0/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       0       0       0       0
   429 ;;      Totals:         0       0       0       0       0
   430 ;;Total ram usage:        0 bytes
   431 ;; Hardware stack levels used: 1
   432 ;; Hardware stack levels required when called: 1
   433 ;; This function calls:
   434 ;;		Nothing
   435 ;; This function is called by:
   436 ;;		_main
   437 ;;		_SPI_Read_String
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441     0040                     _SPI_Read:	
   442                           ;psect for function _SPI_Read
   443                           
   444     0040                     l631:	
   445                           ;incstack = 0
   446                           ; Regs used in _SPI_Read: [wreg]
   447                           
   448                           
   449                           ;mainSlave.c: 67:     if(BF){
   450     0040  1683               	bsf	3,5	;RP0=1, select bank1
   451     0041  1303               	bcf	3,6	;RP1=0, select bank1
   452     0042  1C14               	btfss	20,0	;volatile
   453     0043  2845               	goto	u11
   454     0044  2846               	goto	u10
   455     0045                     u11:
   456     0045  2851               	goto	l73
   457     0046                     u10:
   458     0046                     l633:
   459                           
   460                           ;mainSlave.c: 68:         Data = SSPBUF;
   461     0046  1283               	bcf	3,5	;RP0=0, select bank0
   462     0047  1303               	bcf	3,6	;RP1=0, select bank0
   463     0048  0813               	movf	19,w	;volatile
   464     0049  00F2               	movwf	_Data
   465     004A                     l635:
   466                           
   467                           ;mainSlave.c: 69:         BF = 0;
   468     004A  1683               	bsf	3,5	;RP0=1, select bank1
   469     004B  1303               	bcf	3,6	;RP1=0, select bank1
   470     004C  1014               	bcf	20,0	;volatile
   471     004D                     l637:
   472                           
   473                           ;mainSlave.c: 70:         SSPOV = 0;
   474     004D  1283               	bcf	3,5	;RP0=0, select bank0
   475     004E  1303               	bcf	3,6	;RP1=0, select bank0
   476     004F  1314               	bcf	20,6	;volatile
   477                           
   478                           ;mainSlave.c: 71:         return Data;
   479     0050  0872               	movf	_Data,w
   480     0051                     l73:
   481     0051  0008               	return
   482     0052                     __end_of_SPI_Read:
   483                           
   484                           	psect	text3
   485     0052                     __ptext3:	
   486 ;; *************** function _ISR *****************
   487 ;; Defined at:
   488 ;;		line 80 in file "mainSlave.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;		None
   491 ;; Auto vars:     Size  Location     Type
   492 ;;		None
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      void 
   495 ;; Registers used:
   496 ;;		wreg
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         0       0       0       0       0
   504 ;;      Temps:          2       0       0       0       0
   505 ;;      Totals:         2       0       0       0       0
   506 ;;Total ram usage:        2 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		Interrupt level 1
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515     0052                     _ISR:	
   516                           ;psect for function _ISR
   517                           
   518     0052                     i1l655:
   519                           
   520                           ;mainSlave.c: 81:     if(SSPIF){
   521     0052  1283               	bcf	3,5	;RP0=0, select bank0
   522     0053  1303               	bcf	3,6	;RP1=0, select bank0
   523     0054  1D8C               	btfss	12,3	;volatile
   524     0055  2857               	goto	u3_21
   525     0056  2858               	goto	u3_20
   526     0057                     u3_21:
   527     0057  285D               	goto	i1l85
   528     0058                     u3_20:
   529     0058                     i1l657:
   530                           
   531                           ;mainSlave.c: 82:         Data = SSPBUF;
   532     0058  0813               	movf	19,w	;volatile
   533     0059  00F2               	movwf	_Data
   534     005A                     i1l659:
   535                           
   536                           ;mainSlave.c: 83:         SSPIE = 0;
   537     005A  1683               	bsf	3,5	;RP0=1, select bank1
   538     005B  1303               	bcf	3,6	;RP1=0, select bank1
   539     005C  118C               	bcf	12,3	;volatile
   540     005D                     i1l85:
   541     005D  0871               	movf	??_ISR+1,w
   542     005E  008A               	movwf	10
   543     005F  0E70               	swapf	??_ISR,w
   544     0060  0083               	movwf	3
   545     0061  0EFE               	swapf	btemp,f
   546     0062  0E7E               	swapf	btemp,w
   547     0063  0009               	retfie
   548     0064                     __end_of_ISR:
   549     007E                     btemp	set	126	;btemp
   550     007E                     wtemp0	set	126
   551                           
   552                           	psect	intentry
   553     0004                     __pintentry:	
   554                           ;incstack = 0
   555                           ; Regs used in _ISR: [wreg]
   556                           
   557     0004                     interrupt_function:
   558     007E                     saved_w	set	btemp
   559     0004  00FE               	movwf	btemp
   560     0005  0E03               	swapf	3,w
   561     0006  00F0               	movwf	??_ISR
   562     0007  080A               	movf	10,w
   563     0008  00F1               	movwf	??_ISR+1
   564     0009  120A  118A  2852   	ljmp	_ISR
   565                           
   566                           	psect	config
   567                           
   568                           ;Config register CONFIG @ 0x2007
   569                           ;	Oscillator Selection bits
   570                           ;	FOSC = XT, XT oscillator
   571                           ;	Watchdog Timer Enable bit
   572                           ;	WDTE = OFF, WDT disabled
   573                           ;	Power-up Timer Enable bit
   574                           ;	PWRTE = ON, PWRT enabled
   575                           ;	Brown-out Reset Enable bit
   576                           ;	BOREN = ON, BOR enabled
   577                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   578                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
   579                           ;	Data EEPROM Memory Code Protection bit
   580                           ;	CPD = OFF, Data EEPROM code protection off
   581                           ;	Flash Program Memory Write Enable bits
   582                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   583                           ;	In-Circuit Debugger Mode bit
   584                           ;	DEBUG = 0x1, unprogrammed default
   585                           ;	Flash Program Memory Code Protection bit
   586                           ;	CP = OFF, Code protection off
   587     2007                     	org	8199
   588     2007  3F71               	dw	16241

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       3
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _SPI_Read
                     _SPI_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SPI_Read                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Read
   _SPI_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       3       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       3      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Sat Dec 07 12:40:20 2024

                     _BF 04A0                       l73 0051                       l69 002B  
                     u10 0046                       u11 0045                      l631 0040  
                    l633 0046                      l641 002C                      l635 004A  
                    l643 0031                      l637 004D                      l629 0014  
                    l645 0034                      _CKE 04A6                      _CKP 00A4  
                    _GIE 005F                      _ISR 0052                      _SMP 04A7  
                   ?_ISR 0070                     _PEIE 005E                     i1l85 005D  
                   _Data 0072                     u3_20 0058                     u3_21 0057  
                   _main 002C                     btemp 007E           _SPI_Slave_Init 0014  
                   start 000C                    ??_ISR 0070                    ?_main 0070  
                  _PCFG0 04F8                    _PCFG1 04F9                    _PCFG2 04FA  
                  _PCFG3 04FB                    i1l655 0052                    i1l657 0058  
                  i1l659 005A                    _PORTB 0006                    _SSPM0 00A0  
                  _SSPM1 00A1                    _SSPM2 00A2                    _SSPM3 00A3  
                  _TRISB 0086                    _SSPIE 0463                    _SSPEN 00A5  
                  _SSPIF 0063                    _SSPOV 00A6         __end_of_SPI_Read 0052  
                  pclath 000A   __end_of_SPI_Slave_Init 002C                    status 0003  
                  wtemp0 007E          __initialization 000F             __end_of_main 0040  
                 ??_main 0072          ?_SPI_Slave_Init 0070                   _TRISA5 042D  
                 _TRISC3 043B                   _TRISC4 043C                   _TRISC5 043D  
                 _SSPBUF 0013                   saved_w 007E  __end_of__initialization 0010  
         __pcstackCOMMON 0070                ?_SPI_Read 0070               __pmaintext 002C  
             __pintentry 0004               ??_SPI_Read 0072                  __ptext1 0014  
                __ptext2 0040                  __ptext3 0052         ??_SPI_Slave_Init 0072  
   end_of_initialization 0010      start_initialization 000F              __end_of_ISR 0064  
            __pbssCOMMON 0072                ___latbits 0002        interrupt_function 0004  
               _SPI_Read 0040                 intlevel1 0000  
